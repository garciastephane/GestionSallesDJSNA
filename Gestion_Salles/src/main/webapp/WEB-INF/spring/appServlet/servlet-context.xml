<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.11.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- un bean DataSource pour specifier les donnees concernant la connexion (URL, Driver; login, pwd)-->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="org.postgresql.Driver" />
		<beans:property name="url" value="jdbc:postgresql://localhost:5432/jspjsa" />
		<beans:property name="username" value="ndjs" />
		<beans:property name="password" value="ndjs" />
	</beans:bean>
	
	<!-- un bean EntityManagerFactory pour la gestion dâ€™entites -->
	<beans:bean id="entityManagerFactory"  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		
		<!-- Il faut mettre le package qui contient les entites DAO -->
		<beans:property name="packagesToScan" value="fr.afpa.entitespersistees" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean	class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</beans:property>
		
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<!-- Le bean transactionManager  permet la gestion des transactions dans Spring -->
	<beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory"	ref="entityManagerFactory" />
	</beans:bean>
	
	<!-- package des controllers -->
	<context:component-scan base-package="fr.afpa.gestionsalles" />
	
	<!-- package des repositories -->
	<jpa:repositories base-package="fr.afpa.repositories" />
	
	<!-- package des interfaces -->
	<context:component-scan base-package="fr.afpa.interfaces.dto"/>
	<context:component-scan base-package="fr.afpa.interfaces.services"/>
	<context:component-scan base-package="fr.afpa.interfaces.controles"/>
	
	<!-- package des services et du dto -->
	<context:component-scan base-package="fr.afpa.dto"/>
	<context:component-scan base-package="fr.afpa.services"/>
	<context:component-scan base-package="fr.afpa.controles"/>
	
	
</beans:beans>
